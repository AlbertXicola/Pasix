manage.py: Este archivo es utilizado para realizar diversas tareas relacionadas con tu aplicación, como la creación de la base de datos, la ejecución de migraciones y el inicio del servidor de desarrollo.

settings.py: En este archivo se encuentran configuraciones importantes para tu aplicación, como la configuración de la base de datos, la configuración de las aplicaciones instaladas, las claves secretas, entre otras cosas.

urls.py: Define las URL de tu aplicación y cómo se deben manejar. Es la entrada principal para la gestión de rutas y vistas.

views.py: Aquí se definen las funciones o clases de vista que manejan las solicitudes HTTP y devuelven las respuestas.

models.py: Contiene las definiciones de tus modelos de base de datos. Define cómo se estructuran los datos en la base de datos.

admin.py: Se utiliza para registrar los modelos en el panel de administración de Django para facilitar la gestión de datos.

static/ y templates/: Estas carpetas contienen archivos estáticos (como hojas de estilo CSS, imágenes) y plantillas HTML, respectivamente.

migrations/: Esta carpeta contiene archivos que gestionan las migraciones de base de datos. Las migraciones son scripts que aplican cambios en el esquema de la base de datos.

requirements.txt: Lista las dependencias de tu aplicación. Puedes generar este archivo con el comando pip freeze > requirements.txt después de instalar tus dependencias.

venv/ o env/: Carpeta que contiene el entorno virtual de Python. Es una buena práctica utilizar un entorno virtual para aislar las dependencias de tu proyecto.

requirements.txt: Archivo que lista las dependencias de tu proyecto. Puedes generar este archivo utilizando pip freeze > requirements.txt después de instalar tus dependencias.

pip install djangorestframework

python -m pip install Pillow

